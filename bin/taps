#!/usr/bin/env ruby

require 'rubygems'

cmd = ARGV.shift.downcase.strip rescue ''
database_url = ARGV.shift.strip rescue ''

def show_usage_and_exit
	puts <<-EOTXT
usage: taps server <database_url>
       taps receive <database_url> <remote_url>
       taps send <database_url> <remote_url>
	EOTXT
	exit 1
end

show_usage_and_exit if cmd == '' or database_url == ''

require 'sequel'
begin
	db = Sequel.connect(database_url)
	db.tables
	db.disconnect
rescue => e
	puts "Failed to connect to database:\n  #{e.class} -> #{e}"
	exit
end

if cmd == 'server'
	puts "Taps database import/export server"
	puts "Using database: #{database_url}"

	require 'sinatra'
	set :database_url, database_url
	set :port, 5000
	set :env, 'production'

	require File.dirname(__FILE__) + '/../lib/taps/server'
elsif cmd.match(/^(send|receive)(:(schema|data))?$/)
	remote_url = ARGV.shift.strip rescue ''
	show_usage_and_exit if remote_url == ''

	require File.dirname(__FILE__) + '/../lib/taps/client_session'

	Taps::ClientSession.start(database_url, remote_url) do |session|
		session.send "cmd_#{cmd.gsub(/:/, '_')}".to_sym
	end
else
	show_usage_and_exit
end


#!/usr/bin/env ruby

require 'rubygems'

cmd = ARGV.shift.downcase.strip rescue ''
database_url = ARGV.shift.strip rescue ''

def show_usage_and_exit
	puts <<-EOTXT
usage: taps server <database_url>
       taps receive <database_url> <remote_url>
       taps send <database_url> <remote_url>
	EOTXT
	exit 1
end

show_usage_and_exit if cmd == '' or database_url == ''

if cmd == 'server'
	puts "Taps database import/export server"

	require 'sinatra'

	set :database_url, database_url
	puts "Using database: #{database_url}"

	set :port, 5000
	set :env, 'production'
	require File.dirname(__FILE__) + '/../lib/taps/server'
elsif cmd == 'send' || cmd == 'receive'
	remote_url = ARGV.shift.strip rescue ''
	show_usage_and_exit if remote_url == ''

	require File.dirname(__FILE__) + '/../lib/taps/client_session'

	Taps::ClientSession.start(database_url, remote_url) do |session|
		session.send if cmd == 'send'
		session.receive if cmd == 'receive'
	end
elsif cmd == 'receive:schema'
	remote_url = ARGV.shift.strip rescue ''
	show_usage_and_exit if remote_url == ''

	require File.dirname(__FILE__) + '/../lib/taps/client_session'

	Taps::ClientSession.start(database_url, remote_url) do |session|
		session.receive_schema
	end
else
	show_usage_and_exit
end

